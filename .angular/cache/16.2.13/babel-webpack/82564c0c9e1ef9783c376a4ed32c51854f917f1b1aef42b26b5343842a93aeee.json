{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n    this.USER_KEY = '[user]';\n  }\n  getPosts$() {\n    return this.http.get(`${this.apiUrl}/data/posts`);\n  }\n  getPost$(postId) {\n    return this.http.get(`${this.apiUrl}/${postId}`);\n  }\n  getAllByOwner$(ownerId) {\n    return this.http.get(`${this.apiUrl}?where=_ownerId%3D%22${ownerId}%22`);\n  }\n  createPost$(post) {\n    const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n    const user = JSON.parse(localStorageUser);\n    const accessToken = user.accessToken;\n    const headers = new HttpHeaders({\n      'X-Authorization': accessToken,\n      'Content-Type': 'application/json'\n    });\n    const options = {\n      headers\n    };\n    return this.http.post(`${this.apiUrl}/data/posts`, post, options);\n  }\n  edit$(postId, post) {\n    const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n    const user = JSON.parse(localStorageUser);\n    const accessToken = user.accessToken;\n    const headers = new HttpHeaders({\n      'X-Authorization': accessToken,\n      'Content-Type': 'application/json'\n    });\n    const options = {\n      headers\n    };\n    return this.http.put(`${this.apiUrl}/${postId}`, post, options);\n  }\n  delete$(postId) {\n    const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n    const user = JSON.parse(localStorageUser);\n    const accessToken = user.accessToken;\n    const headers = new HttpHeaders({\n      'X-Authorization': accessToken\n    });\n    const options = {\n      headers\n    };\n    return this.http.delete(`${this.apiUrl}/${postId}`, options);\n  }\n  static #_ = this.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","PostService","constructor","http","apiUrl","USER_KEY","getPosts$","get","getPost$","postId","getAllByOwner$","ownerId","createPost$","post","localStorageUser","localStorage","getItem","user","JSON","parse","accessToken","headers","options","edit$","put","delete$","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\eddym\\OneDrive\\Desktop\\angular-exam\\angular-exam\\src\\app\\post.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { environment } from 'src/environments/environment.prod';\nimport { CreatePost, Post } from './types/post';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  apiUrl = environment.apiUrl;\n  USER_KEY = '[user]';\n\n  constructor(private http: HttpClient) {}\n\n  getPosts$() {\n    return this.http.get<Post[]>(`${this.apiUrl}/data/posts`)\n  }\n\n  getPost$(postId: string): Observable<Post> {\n    return this.http.get<Post>(`${this.apiUrl}/${postId}`)\n  }\n\n  getAllByOwner$(ownerId: string): Observable<Post[]> {\n    return this.http.get<Post[]>(\n      `${this.apiUrl}?where=_ownerId%3D%22${ownerId}%22`\n    );\n  }\n\n  createPost$(post: CreatePost): Observable<CreatePost> {\n    const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n    const user = JSON.parse(localStorageUser);\n    const accessToken = user.accessToken;\n\n    const headers = new HttpHeaders({\n      'X-Authorization': accessToken,\n    'Content-Type': 'application/json'\n    });\n\n    const options = { headers };\n\n    return this.http.post<CreatePost>(\n      `${this.apiUrl}/data/posts`,\n      post,\n      options\n    )\n  }\n\n  edit$(\n    postId: string,\n   post: Post\n  ): Observable<Post> {\n    const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n    const user = JSON.parse(localStorageUser);\n    const accessToken = user.accessToken;\n\n    const headers = new HttpHeaders({\n      'X-Authorization': accessToken,\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.put<Post>(\n      `${this.apiUrl}/${postId}`,\n      post,\n      options\n    );\n  }\n\n  delete$(postId: string): Observable<Post> {\n    const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n    const user = JSON.parse(localStorageUser);\n    const accessToken = user.accessToken;\n\n    const headers = new HttpHeaders({\n      'X-Authorization': accessToken,\n    });\n    const options = { headers };\n    return this.http.delete<Post>(\n      `${this.apiUrl}/${postId}`,\n      options\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,mCAAmC;;;AAO/D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM;IAC3B,KAAAC,QAAQ,GAAG,QAAQ;EAEoB;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,MAAM,aAAa,CAAC;EAC3D;EAEAI,QAAQA,CAACC,MAAc;IACrB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAO,GAAG,IAAI,CAACH,MAAM,IAAIK,MAAM,EAAE,CAAC;EACxD;EAEAC,cAAcA,CAACC,OAAe;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAClB,GAAG,IAAI,CAACH,MAAM,wBAAwBO,OAAO,KAAK,CACnD;EACH;EAEAC,WAAWA,CAACC,IAAgB;IAC1B,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACX,QAAQ,CAAC,IAAI,EAAE;IAClE,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;IACzC,MAAMM,WAAW,GAAGH,IAAI,CAACG,WAAW;IAEpC,MAAMC,OAAO,GAAG,IAAItB,WAAW,CAAC;MAC9B,iBAAiB,EAAEqB,WAAW;MAChC,cAAc,EAAE;KACf,CAAC;IAEF,MAAME,OAAO,GAAG;MAAED;IAAO,CAAE;IAE3B,OAAO,IAAI,CAAClB,IAAI,CAACU,IAAI,CACnB,GAAG,IAAI,CAACT,MAAM,aAAa,EAC3BS,IAAI,EACJS,OAAO,CACR;EACH;EAEAC,KAAKA,CACHd,MAAc,EACfI,IAAU;IAET,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACX,QAAQ,CAAC,IAAI,EAAE;IAClE,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;IACzC,MAAMM,WAAW,GAAGH,IAAI,CAACG,WAAW;IAEpC,MAAMC,OAAO,GAAG,IAAItB,WAAW,CAAC;MAC9B,iBAAiB,EAAEqB,WAAW;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,MAAME,OAAO,GAAG;MAAED;IAAO,CAAE;IAC3B,OAAO,IAAI,CAAClB,IAAI,CAACqB,GAAG,CAClB,GAAG,IAAI,CAACpB,MAAM,IAAIK,MAAM,EAAE,EAC1BI,IAAI,EACJS,OAAO,CACR;EACH;EAEAG,OAAOA,CAAChB,MAAc;IACpB,MAAMK,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACX,QAAQ,CAAC,IAAI,EAAE;IAClE,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;IACzC,MAAMM,WAAW,GAAGH,IAAI,CAACG,WAAW;IAEpC,MAAMC,OAAO,GAAG,IAAItB,WAAW,CAAC;MAC9B,iBAAiB,EAAEqB;KACpB,CAAC;IACF,MAAME,OAAO,GAAG;MAAED;IAAO,CAAE;IAC3B,OAAO,IAAI,CAAClB,IAAI,CAACuB,MAAM,CACrB,GAAG,IAAI,CAACtB,MAAM,IAAIK,MAAM,EAAE,EAC1Ba,OAAO,CACR;EACH;EAAC,QAAAK,CAAA,G;qBAzEU1B,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX/B,WAAW;IAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}