{"ast":null,"code":"export function validateEmail(domains) {\n  const domainString = domains.join('|');\n  const regExp = new RegExp(`[A-Za-z0-9]+@(${domainString})`);\n  return control => {\n    const isEmailInvalid = control.value === '' || regExp.test(control.value);\n    return isEmailInvalid ? null : {\n      validateEmail: true,\n      expectedDomains: domains.join(', ')\n    };\n  };\n}","map":{"version":3,"names":["validateEmail","domains","domainString","join","regExp","RegExp","control","isEmailInvalid","value","test","expectedDomains"],"sources":["C:\\Users\\eddym\\OneDrive\\Desktop\\angular-exam\\angular-exam\\src\\app\\shared\\utils\\validateEmailUtil.ts"],"sourcesContent":["import { ValidatorFn } from '@angular/forms';\r\n\r\nexport function validateEmail(domains: string[]): ValidatorFn {\r\n  const domainString = domains.join('|');\r\n  const regExp = new RegExp(`[A-Za-z0-9]+@(${domainString})`);\r\n  return (control) => {\r\n    const isEmailInvalid = control.value === '' || regExp.test(control.value);\r\n    return isEmailInvalid\r\n      ? null\r\n      : { validateEmail: true, expectedDomains: domains.join(', ') };\r\n  };\r\n}\r\n"],"mappings":"AAEA,OAAM,SAAUA,aAAaA,CAACC,OAAiB;EAC7C,MAAMC,YAAY,GAAGD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;EACtC,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,iBAAiBH,YAAY,GAAG,CAAC;EAC3D,OAAQI,OAAO,IAAI;IACjB,MAAMC,cAAc,GAAGD,OAAO,CAACE,KAAK,KAAK,EAAE,IAAIJ,MAAM,CAACK,IAAI,CAACH,OAAO,CAACE,KAAK,CAAC;IACzE,OAAOD,cAAc,GACjB,IAAI,GACJ;MAAEP,aAAa,EAAE,IAAI;MAAEU,eAAe,EAAET,OAAO,CAACE,IAAI,CAAC,IAAI;IAAC,CAAE;EAClE,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}